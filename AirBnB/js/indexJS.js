//import the listings
async function readJson(filename) {
    const response = await fetch(filename);
    // code borrowed from https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    try {

    if (!response.ok){
        throw new Error(`Response status: ${response.status}`);
    }
    const result = await response.json()
    console.log(result);
    addListingsOntoPage(result);
    } catch (e){
        console.error(e.message);
    }
}

function addListingsOntoPage(json){
    let columnNumber = 1;
    for (let i = 0;i<json.length;i++){
        createListingPane(columnNumber,json[i],i);
        columnNumber = (columnNumber % 4) + 1;
    }


}
function createListingPane(columnNumber,json,total){
    let id = "column" + String(columnNumber);
    const column = document.getElementById(id);
   //create new row
    const row = document.createElement("div");
    row.classList.add("row","hstack","p-2");

    column.appendChild(row);
    //create new card
    const card = document.createElement("div");
    card.classList.add("card","p-0","m-0");
    row.appendChild(card);
    
    //add image
    const cardImage = document.createElement("img");
    cardImage.src = json.picture_url;
    cardImage.alt = "picture of listing";
    cardImage.classList.add("card-img-top");
    card.appendChild(cardImage);

    const cardBody = card.appendChild(document.createElement("div"));
    cardBody.classList.add("card-body");




    const header = cardBody.appendChild(document.createElement("h5"));
    header.classList.add("card-title");
    header.innerText = json.name;

    //add text
    const cardText = document.createElement("p");
    cardText.innerHTML = pruneStr(json.description)
    cardText.classList.add("card-text");
    cardBody.appendChild(cardText);

    const targetId = "modal" + total;
    //add modal
    //this section was generated by chatgtp
    const button = cardText.appendChild(document.createElement("button"));

    // Add the appropriate classes
    button.classList.add("btn", "btn-link", "p-0", "m-0");

   

    // Set the data-bs-toggle and data-bs-target attributes
    button.setAttribute("data-bs-toggle", "modal");
    button.setAttribute("data-bs-target", `#${targetId}`);

    const modal = cardBody.appendChild(document.createElement("div"))
    modal.classList.add("modal");
    modal.setAttribute("id",targetId);
    // Set the button's inner text
    button.innerText = "more";
    const modalDialog = modal.appendChild(document.createElement("div"));

    modalDialog.classList.add("modal-dialog", "modal-dialog-centered", "modal-dialog-scrollable");

    // Create modal content wrapper
    const modalContent = document.createElement("div");
    modalContent.classList.add("modal-content");

    // Create and append the listing title (h4)
    const title = document.createElement("h4");
    title.classList.add("modal-header");
    title.innerText = json.name;
    modalContent.appendChild(title);

    // Create and append the price (h5)
    const priceElement = document.createElement("h5");
    priceElement.classList.add("modal-header");
    priceElement.innerText = json.price;
    modalContent.appendChild(priceElement);

    // Create and append the image
    const image = document.createElement("img");
    image.src = json.picture_url;
    image.alt = "picture of listing";
    image.classList.add("card-img-top");
    modalContent.appendChild(image);

    // Create and append the description (div)
    const modalBody = document.createElement("div");
    modalBody.classList.add("modal-body");
    modalBody.innerHTML = json.description;
    modalContent.appendChild(modalBody);

    // Create container for host information
    const hostContainer = document.createElement("div");
    hostContainer.classList.add("container", "hstack", "host-information");

    // Create host image (column-4)
    const hostPictureContainer = document.createElement("div");
    hostPictureContainer.classList.add("column-4", "host-picture");

    const hostImageElement = document.createElement("img");
    hostImageElement.src = json.host_thumbnail_url;
    hostImageElement.alt = "host image";
    hostPictureContainer.appendChild(hostImageElement);

    // Create host description (column-6)
    const hostDescriptionElement = document.createElement("div");
    hostDescriptionElement.classList.add("column-6", "host-description");
    hostDescriptionElement.innerText = json.host_about;

    // Append the host picture and description to the host container
    hostContainer.appendChild(hostPictureContainer);
    hostContainer.appendChild(hostDescriptionElement);

    // Append host container to modal content
    modalContent.appendChild(hostContainer);

    // Append modal content to modal dialog
    modalDialog.appendChild(modalContent);

    //end chatgtp section

}

//this function was generated by chatgtp
function createModalContent(listingTitle, price, imageSrc, description, hostImage, hostDescription) {
  // Create modal dialog container
  
  // Return the complete modal
  return modalDialog;
}

//prunes a description to less than 100 characters, and formats for the card view
//so that we have an abbreviated look.
function pruneStr(string){
    let cut = 0;
    let final_string = ""
    for (let i = 100;i>0;i--){
        if (string[i] === ' '){
            cut = i;
            break;
        }
    }
    for (let i = 0;i<cut;i++){
        final_string += string[i];
    }
    return final_string + "..."
}



//createListingPane(2,undefined);
const AirbnbListings = readJson("./airbnb_sf_listings_500.json");